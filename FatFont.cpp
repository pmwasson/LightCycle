#include "FatFont.h"

// 6 x 7 bold font
const unsigned char PROGMEM font[] = {
0x3E, 0x43, 0x75, 0x75, 0x43, 0x3E, // @ (A)
0x7C, 0x7E, 0x13, 0x13, 0x7E, 0x7C, // A 
0x7F, 0x7F, 0x49, 0x49, 0x7F, 0x36, // B
0x3E, 0x7F, 0x41, 0x41, 0x63, 0x22, // C
0x7F, 0x7F, 0x41, 0x41, 0x7F, 0x3E, // D
0x7F, 0x7F, 0x49, 0x49, 0x49, 0x41, // E
0x7F, 0x7F, 0x09, 0x09, 0x09, 0x01, // F
0x3E, 0x7F, 0x41, 0x41, 0x5B, 0x3A, // G
0x7F, 0x7F, 0x08, 0x08, 0x7F, 0x7F, // H
0x00, 0x41, 0x7F, 0x7F, 0x41, 0x00, // I
0x30, 0x70, 0x40, 0x40, 0x7F, 0x3F, // J
0x7F, 0x7F, 0x08, 0x1C, 0x77, 0x63, // K
0x7F, 0x7F, 0x40, 0x40, 0x40, 0x40, // L
0x7F, 0x7E, 0x0C, 0x0C, 0x7E, 0x7F, // M
0x7F, 0x7F, 0x0C, 0x18, 0x7F, 0x7F, // N
0x3E, 0x7F, 0x41, 0x41, 0x7F, 0x3E, // O
0x7F, 0x7F, 0x11, 0x11, 0x1F, 0x0E, // P
0x3E, 0x7F, 0x41, 0x51, 0x3F, 0x6E, // Q
0x7F, 0x7F, 0x11, 0x11, 0x7F, 0x6E, // R
0x26, 0x6F, 0x49, 0x49, 0x7B, 0x32, // S
0x01, 0x01, 0x7F, 0x7F, 0x01, 0x01, // T
0x3F, 0x7F, 0x40, 0x40, 0x7F, 0x3F, // U
0x1F, 0x3F, 0x60, 0x60, 0x3F, 0x1F, // V
0x7F, 0x3F, 0x18, 0x18, 0x3F, 0x7F, // W
0x63, 0x77, 0x1C, 0x1C, 0x77, 0x63, // X
0x07, 0x0F, 0x78, 0x78, 0x0F, 0x07, // Y
0x61, 0x71, 0x59, 0x4D, 0x47, 0x43, // Z
0x0C, 0x1E, 0x3F, 0x0C, 0x0C, 0x0C, // [ (left) 
0x08, 0x18, 0x3F, 0x3F, 0x18, 0x08, // \ (down)
0x0C, 0x0C, 0x0C, 0x3F, 0x1E, 0x0C, // ] (right)
0x04, 0x06, 0x3F, 0x3F, 0x06, 0x04, // ^ (up)
0x3E, 0x41, 0x55, 0x55, 0x63, 0x3E, // _ (B)
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // space
0x00, 0x00, 0x6F, 0x6F, 0x00, 0x00, // !
0x03, 0x03, 0x00, 0x00, 0x03, 0x03, // "
0x12, 0x3F, 0x12, 0x12, 0x3F, 0x12, // #
0x2E, 0x2A, 0x7F, 0x7F, 0x2A, 0x3A, // $
0x33, 0x3B, 0x1C, 0x0E, 0x37, 0x33, // %
0x36, 0x7F, 0x49, 0x7F, 0x36, 0x50, // &
0x00, 0x00, 0x03, 0x03, 0x00, 0x00, // '
0x00, 0x3E, 0x7F, 0x41, 0x41, 0x00, // (
0x00, 0x41, 0x41, 0x7F, 0x3E, 0x00, // )
0x22, 0x36, 0x1C, 0x1C, 0x36, 0x22, // *
0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, // +
0x00, 0x00, 0x70, 0x30, 0x00, 0x00, // ,
0x08, 0x08, 0x08, 0x08, 0x08, 0x00, // -
0x00, 0x00, 0x60, 0x60, 0x00, 0x00, // .
0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, // /
0x3E, 0x7F, 0x41, 0x41, 0x7F, 0x3E, // 0 
0x00, 0x42, 0x7F, 0x7F, 0x40, 0x00, // 1
0x71, 0x79, 0x49, 0x49, 0x4F, 0x46, // 2
0x41, 0x49, 0x49, 0x49, 0x7F, 0x36, // 3
0x0F, 0x0F, 0x08, 0x08, 0x7F, 0x7F, // 4
0x4F, 0x4F, 0x49, 0x49, 0x79, 0x31, // 5
0x3E, 0x7F, 0x49, 0x49, 0x79, 0x30, // 6
0x01, 0x71, 0x79, 0x0D, 0x07, 0x03, // 7
0x36, 0x7F, 0x49, 0x49, 0x7F, 0x36, // 8
0x06, 0x4F, 0x49, 0x49, 0x7F, 0x3E, // 9
0x00, 0x00, 0x66, 0x66, 0x00, 0x00, // : 
0x00, 0x00, 0x76, 0x36, 0x00, 0x00, // ;
0x08, 0x1C, 0x36, 0x63, 0x41, 0x00, // <
0x12, 0x12, 0x12, 0x12, 0x12, 0x00, // =
0x41, 0x63, 0x36, 0x1C, 0x08, 0x00, // >
0x02, 0x01, 0x6D, 0x6D, 0x07, 0x06, // ?
};

size_t FatFont::write(uint8_t c) {
  if (c == '\n') {
    cursorX = baseX; 
    cursorY += LINE_HEIGHT; 
  }
  else if (c >= ' ') {
    printChar(c, cursorX, cursorY);
    cursorX += LETTER_WIDTH + LETTER_SPACING;
  }
  return 1;
}

void FatFont::printChar(const char c, const int8_t x, int8_t y) {
  // Index into font (map lowercase to uppercase)
  uint16_t fontIndex = (c & ((c < 96) ? 0x3f : 0x1f)) * LETTER_WIDTH;

  // Y offset
  uint8_t offset = y & 0x7;
  
  // Pointer into screen buffer
  uint16_t screenIndex = WIDTH * (y >> 3) + x;
    
  for (uint8_t i=0 ; i < LETTER_WIDTH+LETTER_SPACING; i++) {
    uint8_t data = (i < LETTER_WIDTH) ? pgm_read_byte(font + fontIndex + i) : 0x00;
    if ((screenIndex < WIDTH*(HEIGHT>>3)) && (x+i < WIDTH)) {
      screenBuffer[screenIndex] = (screenBuffer[screenIndex] & ~(0xff << offset)) | (data<<offset);
      if ((offset > 1) && (screenIndex + 128 < WIDTH*(HEIGHT>>3))) {
        screenBuffer[screenIndex+128] = (screenBuffer[screenIndex+128] & ~(0xff >> (8-offset))) | (data>>(8-offset));
      } 
    }
    screenIndex++;
  }
}

void FatFont::setCursor(int8_t x, int8_t y) {
  cursorX = x;
  baseX = x;
  cursorY = y;
}
